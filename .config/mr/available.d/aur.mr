#!/usr/bin/env zsh

_aurdir="$HOME/projects/aur"

function aur_list () {
	find "$_aurdir" -maxdepth 1 -type d |
		sed -e "s#^$_aurdir/##"
}

aur_list |
	while read pkg; do
		cat <<- EOF
			[$_aurdir/$pkg]
			log = aurpublish log $pkg
			checkout = false
			init = false
			update = false
			push = false
			publish = false
			vote = aurvote -v $pkg
			ood =
			    eval \$(grep export ~/.private/aur-out-of-date.tokens)
			    aur-out-of-date -local .SRCINFO ||:
			bump =
			    git diff-index --quiet --cached HEAD
			    git diff-files --quiet -- PKGBUILD .SRCINFO
			    eval \$(grep export ~/.private/aur-out-of-date.tokens)
			    upstream=\$(aur-out-of-date -json -local .SRCINFO | jq -M -e -r '.upstream')
			    yes | aur-out-of-date -update -local .SRCINFO ||:
			    updpkgsums
			    makepkg --printsrcinfo > .SRCINFO
			    git add PKGBUILD .SRCINFO
			    git diff-index --quiet --cached HEAD || git commit -m "Bump pkgver to \$upstream"
			normalize =
			    git rev-parse --abbrev-ref HEAD | grep -Fqx master
			    git diff-index --quiet --cached HEAD
			    git diff-files --quiet -- PKGBUILD
			    shellharden --replace -- PKGBUILD
			    git add PKGBUILD
			    git diff-index --quiet --cached HEAD || git commit -m 'Normalize shell quoting using \`shellharden\`'
			    makepkg --printsrcinfo > .SRCINFO
			    git add .SRCINFO
			    git diff-index --quiet --cached HEAD || git commit -m 'Normalize meta data using \`makepkg --printsrcinfo\`'
			    echo '*' > .gitignore
			    git add -f .gitignore
			    git ls-files | sed -e 's#^#!./#' >> .gitignore
			    git add .gitignore
			    git diff-index --quiet --cached HEAD || git commit -m 'Normalize .gitignore file'
		EOF
	done

# vi: ft=zsh
