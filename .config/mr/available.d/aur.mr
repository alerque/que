#!/usr/bin/env zsh

aurcache=/tmp/mr-aur-list

# Extra stuff I want to build / host but don't maintain in AUR
extras=(
	age
	age-git
	aur-out-of-date
	camlpdf
	cpdf
	firefox-tridactyl-native
	git-revise
	github-cli
	gnome-defaults-list
	gtkhtml4
	kindlegen
	lab
	latex3
	mattermost-desktop
	mattermost-git
	node-prune
	nodejs-mocha
	nodejs-nan
	nodejs-neovim
	nodejs-node-pre-gyp
	nodejs-pug-cli
	perl-test-most
	psautohint
	python-booleanoperations
	python-cu2qu
	python-fontmath
	python-fontparts
	python-fontpens
	python-defcon
	python-mutatormath
	python-pyclipper
	python-pytimeparse
	python-ufonormalizer
	python-ufoprocessor
	python-unicodedata2
	ttf-amiri
	ttf-charis-sil
	ttf-sil-ezra
	ttf-sil-scheherazade
	ttf-symbola
	ttf-webhostinghub-glyphs
	xiphos
	yay
	zettlr
)

# Extra stuff with pkgbase names that don't match the packages
extras+=(
	lua-bit32
	lua51-checks
	lua51-formatter
	lua51-metalua-compiler
	lua51-metalua-parser
	lua51-penlight
	montserrat-font
)

function aur_list_cache () (
	test -s ${aurcache} || exit 1
	test $(date +%s -r ${aurcache}) -ge $(date +%s --date "60 min ago") || exit 1
	cat ${aurcache}
)

function aur_list () {
	( aur_list_cache ||
			{ curl -s 'https://aur.archlinux.org/packages/?SeB=m&K=caleb&PP=250'
			  curl -s 'https://aur.archlinux.org/packages/?SeB=c&K=caleb&PP=250' } |
			hxselect 'tr > td:first-child > a' -c -s'\n' |
			grep -v '^lua5[12]-' |
			grep -v '^python-pjproject' |
			grep -v '^ttf-droid{,nonlatin}-ib' |
			tee ${aurcache} ) |
		cat - <(xargs -n1 echo <<< $extras) |
		sort -u
}

aur_list |
	while read pkg; do
		aur="ssh://aur@aur.archlinux.org/${pkg}.git"
		cat <<- EOF

			[/home/caleb/projects/aur/${pkg}]
			checkout = git clone ${aur}
			init =
			    git remote show | grep -vE '(origin|github)' | xargs -rn1 git remote remove
			    git remote set-url origin ${aur} || git remote add --fetch origin ${aur}
			    git branch -u origin/master
			    hub create --remote-name github aur-${pkg}
			update =
			    git diff-index --quiet --cached HEAD
			    git diff-files --quiet
			    git fetch --all
			    git rebase origin/master
			push =
			    git diff-index --quiet --cached HEAD
			    git push origin master:master
			    git push github master:master
			publish =
			    git diff-index --quiet --cached HEAD
			    git diff-files --quiet -- PKGBUILD .SRCINFO
			    makepkg ||:
			    local buildver=\$(awk '/epoch = / { print \$3 ":" }' .SRCINFO)
			    buildver+=\$(awk '/pkgver = / { print \$3 "-" }' .SRCINFO)
			    buildver+=\$(awk '/pkgrel = / { print \$3 "-" }' .SRCINFO)
			    buildver+=\$(awk '/arch = (any|x86_64)/ { print \$3 }' .SRCINFO)
			    for pkgname in \$(awk '/pkgname = / { print \$3 }' .SRCINFO); do
			        local pkgfile=\$pkgname-\$buildver.pkg.tar.zst
			        scp "./\$pkgfile"{,.sig} arch.alerque.com:x86_64
			    done
			vote = aurvote -v ${pkg}
			ood =
			    eval $(grep export ~/.private/aur-out-of-date.tokens)
			    aur-out-of-date -local .SRCINFO ||:
			bump =
			    git diff-index --quiet --cached HEAD
			    git diff-files --quiet -- PKGBUILD .SRCINFO
			    eval $(grep export ~/.private/aur-out-of-date.tokens)
			    upstream=\$(aur-out-of-date -json -local .SRCINFO | jq -M -e -r '.upstream')
			    yes | aur-out-of-date -update -local .SRCINFO ||:
			    updpkgsums
			    makepkg --printsrcinfo > .SRCINFO
			    git add PKGBUILD .SRCINFO
			    git diff-index --quiet --cached HEAD || git commit -m "Bump pkgver to \$upstream"
			normalize =
			    git rev-parse --abbrev-ref HEAD | grep -Fqx master
			    git diff-index --quiet --cached HEAD
			    git diff-files --quiet -- PKGBUILD
			    shellharden --replace -- PKGBUILD
			    git add PKGBUILD
			    git diff-index --quiet --cached HEAD || git commit -m 'Normalize shell quoting using \`shellharden\`'
			    makepkg --printsrcinfo > .SRCINFO
			    git add .SRCINFO
			    git diff-index --quiet --cached HEAD || git commit -m 'Normalize meta data using \`makepkg --printsrcinfo\`'
			    echo '*' > .gitignore
			    git add -f .gitignore
			    git ls-files | sed -e 's#^#!./#' >> .gitignore
			    git add .gitignore
			    git diff-index --quiet --cached HEAD || git commit -m 'Normalize .gitignore file'
		EOF
	done
