[core]
	excludesFile = ~/.gitignore
	quotePath = off
[checkout]
	defaultRemote = origin
	workers = -1
[interactive]
	diffFilter = delta --color-only
[user]
	email = caleb@alerque.com
	name = Caleb Maclennan
	signingKey = B538286DE04ECFE5!
[github]
	user = alerque
[pld]
	user = caleb@pld-linux.org
[pager]
	diff = delta
	log = delta
	reflog = delta
	show = delta
[push]
	default = current
	autoSetupRemote = true
	followTags = false
	gpgSign = if-asked
	recurseSubmodules = check
[color]
	ui = true
[merge]
	ff = false
	conflictStyle = diff3
[merge "mergiraf"]
	name = mergiraf
	driver = mergiraf merge --git %O %A %B -s %S -x %X -y %Y -p %P -l %L
[branch]
	autoSetupRebase = always
	rebase = merges
[pull]
	rebase = merges
[apply]
	;whitespace = fix
[rebase]
	autoSquash = true
	autoStash = true
	merges = true
	stat = true
[revise]
	autoSquash = true
[commit]
	gpgsign = true
[format]
	signoff = true
[alias]
	a = add
	ab = absorb
	abr = absorb --and-rebase
	af = autofixup
	ap = add --patch
	au = add --update
	b = branch
	bx = branch --delete
	bX = branch --delete --force
	c = commit
	ca = commit --amend --no-edit
	ce = commit --amend
	cm = commit --message
	co = checkout
	cb = checkout -b
	cp = cherry-pick
	d = diff
	dc = diff --word-diff-regex=. --ignore-all-space
	diff = diff --minimal --word-diff=color
	ds = diff --staged
	dsc = diff --word-diff-regex=. --ignore-all-space --staged
	dsw = diff --ignore-all-space --staged
	dw = diff --ignore-all-space
	fa = fetch --all
	fr = pull --rebase
	g = log --all --graph --decorate --oneline
	l = log
	lf = ls-files
	m = merge
	mc = merge --continue
	p = push
	pc = !zsh -c 'git push --set-upstream origin "$(git-branch-current 2> /dev/null)"'
	pf = push --force-with-lease
	r = rebase
	re = revise
	rec = revise --cut
	ree = revise --edit
	rei = revise --interactive
	ra = rebase --abort
	rc = rebase --continue
	ri = rebase --interactive
	rin = rebase --interactive --no-autosquash
	rs = rebase --skip
	s = show
	sc = show --ignore-all-space --word-diff-regex=.
	show = show --word-diff=color
	st = !datalad -C ${GIT_PREFIX:-.} next-status -r mono
	sw = show --ignore-all-space
	ws = status --ignore-submodules --short
	; work = checkout @{upstream}
	; aa = a -A
	; commit = commit -vv
	; dls = diff-tree --no-commit-id --name-status -r
	; prs = pull --rebase --autostash
	; lg = log --oneline --reverse
	; p = push
	; pf = p --force-with-lease
	; r = rebase
	; rc = rebase --continue
	; ri = rebase --interactive
	; show = show --minimal --word-diff=color
	; st = status
	; getroot = !pwd
	; # http://stackoverflow.com/a/4991675/313192
	; oldest-ancestor = !zsh -c 'diff --old-line-format='' --new-line-format='' <(git rev-list --first-parent "${1:-master}") <(git rev-list --first-parent "${2:-HEAD}") | head -1' -
	; branchlog = !sh -c 'git log $(git oldest-ancestor)..'
	; branchdiff = !sh -c 'git diff $(git oldest-ancestor)..'
	; ; rebase2fork = !zsh -c 'git rebase -i $(git merge-base --fork-point "${0:-master}")'
	; ci-status = !sh -c 'oldest=$(git oldest-ancestor) head=$(git rev-parse HEAD) && git rev-list --oneline $([[ $oldest == $head ]] && echo $head^.. || echo $oldest..) | while read sha x\n do echo $sha $(hub ci-status -v $sha)\n done'
	; conflicts = diff --name-only --diff-filter=U
	; commit-scopes = !zsh -c 'git log --pretty=format:"%s" | rg --pcre2 "^\\\\p{Ll}\\+\\\\\\(\\(\\\\p{Ll}\\+\\)\\\\\\)!\\?:" -or "\\$1" | sort | uniq -c | sort -n'
[log]
	abbrevCommit = true
	decorate = true
	follow = true
[status]
	short = true
	submoduleSummary = true
[rerere]
	enabled = true
[diff]
	indentHeuristic = true
	ignoreSubmodules = dirty
	colorMoved = zebra
	colorMovedWS = ignore-all-space
[diff "fdiff"]
	command = fdiff -c --git
[difftool]
	prompt = false
[difftool "difftastic"]
	cmd = difft "$LOCAL" "$REMOTE"
[difftool "latexdiff"]
	cmd = latexdiff "$LOCAL" "$REMOTE"
[difftool "ufodiff"]
	cmd = ufodiff "$LOCAL" "$REMOTE"
[fetch]
	prune = true
	parallel = 8
	fsckobjects = true
[stash]
	showPatch = true
[transfer]
	fsckObjects = true
[receive]
	fsckObjects = true
[filter "lfs"]
	; clean = git-lfs clean --  %f
	; smudge = git-lfs smudge -- %f
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
[filter "localssh"]
	smudge = cat
	clean = "sed -ne '/BEGIN host local/{p;n;q};p'"
	required = false
[color "diff"]
	meta = yellow
	commit = yellow
	frag = magenta
	old = red
	new = green
	whitespace = red reverse
[color "diff-highlight"]
	oldNormal = red
	oldHighlight = "red 52"
	newNormal = "green"
	newHighlight = "green 22"
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = blue
[color "status"]
	added = green
	changed = yellow
	untracked = cyan
[includeIf "gitdir:~/projects/**"]
	path = ~/.private/gitlab.config
[advice]
	detachedHead = false
[delta]
	; features = line-numbers decorations
	features = side-by-side line-numbers decorations line-wrap
	hunk-header-style = file line-number syntax
	whitespace-error-style = 22 reverse
	wrap-max-lines = unlimited
	syntax-theme = Monokai Extended
	max-line-length = 0
[delta "decorations"]
    commit-decoration-style = bold yellow box ul
    file-style = bold yellow ul
    file-decoration-style = none
[init]
	defaultBranch = master
[gc]
	rerereUnresolved = 30d
	rerereResolved  = 365d
[blame]
	; ignoreRevsFile = .git-blame-ignore-revs
	markIgnoredLines = true
	markUnblamableLines = true
[http]
	postBuffer = 157286400
